package com.cnhi.tests;

import java.io.IOException;

import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.auto.framework.base.Assertion;
import com.auto.framework.base.BaseTest;
import com.auto.framework.utils.AppDeviceFactory;
import com.auto.framework.utils.DeviceConfiguration;
import com.cnhi.pageObjects.GenericPage;
import com.cnhi.pageObjects.HomePage;
import com.cnhi.pageObjects.JobCardPage;
import com.cnhi.pageObjects.LoginPage;

public class AppointmentTest extends BaseTest {
	GenericPage genericPage;
	AppDeviceFactory getDevice;
	DeviceConfiguration deviceConfiguration;
	LoginPage loginPage;
	HomePage homePage;
	JobCardPage jobCardPage;
	Assertion aMob;
	String device;

	@BeforeMethod(alwaysRun = true)
	public void beforeMethod() throws IOException {
		getDevice = new AppDeviceFactory(driver);
		deviceConfiguration = new DeviceConfiguration();

		System.out.println(deviceConfiguration.getInstance());

		device = deviceConfiguration.getDevicePlatform().toString();

		driver = getDevice.createDriver(deviceConfiguration);
		genericPage = new GenericPage();
		loginPage = new LoginPage(driver, genericPage);
		homePage = new HomePage(driver, genericPage);
		jobCardPage = new JobCardPage(driver, genericPage);
		aMob = new Assertion();
		// driver.launchApp();

	}

	@Test(description = "T90-02-04-08-01 CV - Breakdown - Creation - Jobcard details")
	public void BreakdownCreationJobcardDetailsTest() throws Exception {
		loginPage.loginToApplication("W90041D","Saize9044");
		homePage.clickOnJobCardOption();
		jobCardPage.clickOnCreateButton();
		jobCardPage.clickOnBreakdownOrRemoteAppointmentCheckBox();
		jobCardPage.enterCustomerNameOnCustomerNameTextBox("FELBERMATR TRANSPORT- UND",device);
		jobCardPage.enterEmailOnCustomerEmailTextBox("valid@jobcard.com");
		jobCardPage.enterPhoneNoOnCustomerPhoneTextBox("123456789");
		jobCardPage.enterContactNoOnContactPhoneTextBox("123456789");
		// jobCardPage.enterFiscalOnFiscalInformationTextBox("987654321");
		jobCardPage.enterBrandOnBrandTextBox("IVECO");
		jobCardPage.enterModelOnModelNameTextBox("35S16V");
		jobCardPage.enterNumberOnPlateNumberTextBox("BL688CV");
		Thread.sleep(20000);
		jobCardPage.enterMileageOnMileageTextBox("5000");
		jobCardPage.enterSerialNumberOnSerialNumberTextBox("ZCFC135B205130749");
		Thread.sleep(3000);
		jobCardPage.enterComplainsOnCustomerComplainsTextBox("Issue on");
		jobCardPage.enterAddressOnRepairAddressTextBox("HEBETECHNIK GMBH & CO KG AUPOINT 45101 BERGHEIM");


		jobCardPage.clickOnNextStepButton();
		jobCardPage.enterActivityOnActivityTextBox("Repair");
		jobCardPage.clickOnAddButton();
		aMob.AssertTrue(jobCardPage.isToExecuteStatusVisible(), "To Execute Ststus is Visible");
		jobCardPage.clickOnArrowButton();
		jobCardPage.enterDefectCodeOnActivityTextBox("542486 COMPRESSOR DRIVE BELT");
		jobCardPage.selectFailureOptionFromFailureDropDown("001 - DEFECT", device);
		jobCardPage.selectFailureSeverityRateFromFailureSeverityRateDropDown("2 - Severe", device);
		jobCardPage.selectPaymentTypeFromPaymentTypeDropDown("TEST Payment Type", device);
		jobCardPage.clickOnAddNewOperationBtn();
		jobCardPage.enterOperationNameTextBox("55 59 10 100 - R-I SAFETY BELTS DRIVER SEAT", device);
		jobCardPage.clickOnPartsPlusIcon();
		jobCardPage.enterPartCodeOnPartCodeTextBox("54210956", device);
		jobCardPage.clickOnSaveButton();
		aMob.AssertTrue(jobCardPage.isNewOperationCreated("R-I SAFETY BELTS DRIVER SEAT"),
				"New Operation Added Successfully");
		jobCardPage.clickOnAddAnotherItemBtn();
		jobCardPage.selectTypeFromTypeDropDown("Freight", device);
		jobCardPage.selectCodeFromCodeDropDown("C010 - SERVICE PROGRAM", device);
		jobCardPage.enterDescriptionOnDescriptionTextBox("SERVICE PROGRAM");
		jobCardPage.enterPriceOnPriceTextBox("135");
		jobCardPage.clickOnAddItemSaveBtn();
		aMob.AssertTrue(jobCardPage.isNewTypeCreated("Freight"), "New Type Added Successfully");
		jobCardPage.clickOnSaveButton();
		jobCardPage.SelectCreatedAppointment(device);
		aMob.AssertTrue(jobCardPage.isUnassignedActivitiesPopupVisible(),
				"Message Unassigned Activities For Breakdown is Visible");
		jobCardPage.clickOnYesButton();
		aMob.AssertTrue(jobCardPage.isAppointmentInfoLabelVisible(), "Appointment Info Label is Visible");
		aMob.AssertEquals(jobCardPage.getCustomerInfoFromAppointmentInfo(device), "FELBERMATR TRANSPORT- UND",
				"Customer Name from Appointment Screen i.e. " + jobCardPage.getCustomerInfoFromAppointmentInfo(device)
						+ " is same as Expected");

		aMob.AssertEquals(jobCardPage.getModelInfoFromAppointmentInfo(device), "35S16V",
				"Model Name from Appointment Screen i.e. " + jobCardPage.getModelInfoFromAppointmentInfo(device)
						+ " is same as Expected");

		aMob.AssertEquals(jobCardPage.getReceptionDateFromAppointmentInfo(device),
				genericPage.getCurrentDate("MMM dd, yyyy"),
				"Reception Date From Appointment Screen i.e. " + jobCardPage.getReceptionDateFromAppointmentInfo(device)
						+ " is same as Expected i.e. " + genericPage.getCurrentDate("MMM dd, yyyy"));

		aMob.AssertEquals(jobCardPage.getDeliveryDateFromAppointmentInfo(device),
				genericPage.getCurrentDate("MMM dd, yyyy"),
				"Delivery Date From Appointment Screen i.e. " + jobCardPage.getDeliveryDateFromAppointmentInfo(device)
						+ " is same as Expected i.e. " + genericPage.getCurrentDate("MMM dd, yyyy"));

		jobCardPage.clickOnMenuButton();
		jobCardPage.clickOnJobDetailMenuOption();

		aMob.AssertTrue(jobCardPage.isAppointmentInfoLabelVisible(), "Appointment Info Label is Visible");
		aMob.AssertEquals(jobCardPage.getCustomerInfoFromAppointmentInfo(device), "FELBERMATR TRANSPORT- UND",
				"Customer Name From Appointment Screen i.e. " + jobCardPage.getCustomerInfoFromAppointmentInfo(device)
						+ " is same as Expected");

		aMob.AssertEquals(jobCardPage.getModelInfoFromAppointmentInfo(device), "35S16V",
				"Model Name From Appointment Screen i.e. " + jobCardPage.getModelInfoFromAppointmentInfo(device)
						+ " is same as Expected");

		aMob.AssertEquals(jobCardPage.getReceptionDateFromAppointmentInfo(device),
				genericPage.getCurrentDate("MMM dd, yyyy"),
				"Reception Date from Appointment Screen i.e. " + jobCardPage.getReceptionDateFromAppointmentInfo(device)
						+ " is same as Expected i.e. " + genericPage.getCurrentDate("MMM dd, yyyy"));

		aMob.AssertEquals(jobCardPage.getDeliveryDateFromAppointmentInfo(device),
				genericPage.getCurrentDate("MMM dd, yyyy"),
				"Delivery Date From Appointment Screen i.e. " + jobCardPage.getDeliveryDateFromAppointmentInfo(device)
						+ " is same as Expected i.e. " + genericPage.getCurrentDate("MMM dd, yyyy"));

		aMob.AssertTrue(jobCardPage.isContactDetailLabelVisible(), "Contact Detail Label is Visible");

		aMob.AssertEquals(jobCardPage.getCustomerEmailValueFromJobDetail(), "valid@jobcard.com",
				"Customer Email From Job Detail Screen i.e. " + jobCardPage.getCustomerEmailValueFromJobDetail()
						+ " is same as Expected");

		aMob.AssertEquals(jobCardPage.getCustomerPhoneNoValueFromJobDetail(), "123456789",
				"Customer Phone No From Job Detail Screen i.e. " + jobCardPage.getCustomerPhoneNoValueFromJobDetail()
						+ " is same as Expected");

		aMob.AssertEquals(jobCardPage.getContactPhoneNumberNoFromJobDetail(), "123456789",
				"Contact Phone No From Job Detail Screen i.e. " + jobCardPage.getContactPhoneNumberNoFromJobDetail()
						+ " is same as Expected");

		aMob.AssertTrue(jobCardPage.isRepairAddressLabelVisible(), "Repair Address Label is Visible");

		aMob.AssertEquals(jobCardPage.getRepairAddressFromJobDetail(),
				"HEBETECHNIK GMBH & CO KG AUPOINT 45101 BERGHEIM", "Repair Address From Job Detail Screen i.e. "
						+ jobCardPage.getRepairAddressFromJobDetail() + " is same as Expected");

		aMob.AssertTrue(jobCardPage.isCustomerComplainsLabelVisible(), "Customer Complain Label is Visible");

		aMob.AssertEquals(jobCardPage.getCustomerComplainEmailFromJobDetail(), "Issue on",
				"Customer Complain From Job Detail Screen i.e. " + jobCardPage.getCustomerComplainEmailFromJobDetail()
						+ " is same as Expected");

	}

	@Test(description = "1	T90-02-04-08-02 CV - Breakdown - Creation - Vehicle details")
	public void BreakdownCreationVehicleDetailsTest() throws Exception {
		loginPage.loginToApplication("W90041D", "Saize9044");
		homePage.clickOnJobCardOption();
		jobCardPage.clickOnCreateButton();
		jobCardPage.clickOnBreakdownOrRemoteAppointmentCheckBox();
		jobCardPage.enterCustomerNameOnCustomerNameTextBox("FELBERMATR TRANSPORT- UND", device);
		jobCardPage.enterEmailOnCustomerEmailTextBox("valid@jobcard.com");
		jobCardPage.enterPhoneNoOnCustomerPhoneTextBox("123456789");
		jobCardPage.enterContactNoOnContactPhoneTextBox("123456789");
		// jobCardPage.enterFiscalOnFiscalInformationTextBox("987654321");
		jobCardPage.enterBrandOnBrandTextBox("IVECO");
		jobCardPage.enterModelOnModelNameTextBox("35S16V");
		jobCardPage.enterNumberOnPlateNumberTextBox("BL688CV");
		Thread.sleep(20000);
		jobCardPage.enterMileageOnMileageTextBox("5000");
		jobCardPage.enterSerialNumberOnSerialNumberTextBox("ZCFC135B205130749");
		jobCardPage.enterComplainsOnCustomerComplainsTextBox("Issue on");
		jobCardPage.enterAddressOnRepairAddressTextBox("HEBETECHNIK GMBH & CO KG AUPOINT 45101 BERGHEIM");
		jobCardPage.clickOnNextStepButton();
		jobCardPage.enterActivityOnActivityTextBox("Repair");
		jobCardPage.clickOnAddButton();
		aMob.AssertTrue(jobCardPage.isToExecuteStatusVisible(), "To Execute Ststus is Visible");
		jobCardPage.clickOnArrowButton();
		jobCardPage.enterDefectCodeOnActivityTextBox("542486 COMPRESSOR DRIVE BELT");
		jobCardPage.selectFailureOptionFromFailureDropDown("001 - DEFECT", device);
		jobCardPage.selectFailureSeverityRateFromFailureSeverityRateDropDown("2 - Severe", device);
		jobCardPage.selectPaymentTypeFromPaymentTypeDropDown("TEST Payment Type", device);
		jobCardPage.clickOnAddNewOperationBtn();
		jobCardPage.enterOperationNameTextBox("55 59 10 100 - R-I SAFETY BELTS DRIVER SEAT", device);
		jobCardPage.clickOnPartsPlusIcon();
		jobCardPage.enterPartCodeOnPartCodeTextBox("54210956", device);
		jobCardPage.clickOnSaveButton();
		aMob.AssertTrue(jobCardPage.isNewOperationCreated("R-I SAFETY BELTS DRIVER SEAT"),
				"New Operation Added Successfully");
		jobCardPage.clickOnAddAnotherItemBtn();
		jobCardPage.selectTypeFromTypeDropDown("Freight", device);
		jobCardPage.selectCodeFromCodeDropDown("C010 - SERVICE PROGRAM", device);
		jobCardPage.enterDescriptionOnDescriptionTextBox("SERVICE PROGRAM");
		jobCardPage.enterPriceOnPriceTextBox("135");
		jobCardPage.clickOnAddItemSaveBtn();
		aMob.AssertTrue(jobCardPage.isNewTypeCreated("Freight"), "New Type Added Successfully");
		jobCardPage.clickOnSaveButton();
		jobCardPage.SelectCreatedAppointment(device);
		aMob.AssertTrue(jobCardPage.isUnassignedActivitiesPopupVisible(),
				"Message Unassigned Activities For Breakdown is Visible");
		jobCardPage.clickOnYesButton();
		aMob.AssertTrue(jobCardPage.isAppointmentInfoLabelVisible(), "Appointment Info Label is Visible");
		aMob.AssertEquals(jobCardPage.getCustomerInfoFromAppointmentInfo(device), "FELBERMATR TRANSPORT- UND",
				"Customer Name from Appointment Screen i.e. " + jobCardPage.getCustomerInfoFromAppointmentInfo(device)
						+ " is same as Expected");

		aMob.AssertEquals(jobCardPage.getModelInfoFromAppointmentInfo(device), "35S16V",
				"Model Name from Appointment Screen i.e. " + jobCardPage.getModelInfoFromAppointmentInfo(device)
						+ " is same as Expected");

		aMob.AssertEquals(jobCardPage.getReceptionDateFromAppointmentInfo(device),
				genericPage.getCurrentDate("MMM dd, yyyy"),
				"Reception Date From Appointment Screen i.e. " + jobCardPage.getReceptionDateFromAppointmentInfo(device)
						+ " is same as Expected i.e. " + genericPage.getCurrentDate("MMM dd, yyyy"));

		aMob.AssertEquals(jobCardPage.getDeliveryDateFromAppointmentInfo(device),
				genericPage.getCurrentDate("MMM dd, yyyy"),
				"Delivery Date From Appointment Screen i.e. " + jobCardPage.getDeliveryDateFromAppointmentInfo(device)
						+ " is same as Expected i.e. " + genericPage.getCurrentDate("MMM dd, yyyy"));

		jobCardPage.clickOnMenuButton();
		jobCardPage.clickOnJobDetailMenuOption();

		aMob.AssertTrue(jobCardPage.isAppointmentInfoLabelVisible(), "Appointment Info Label is Visible");
		aMob.AssertEquals(jobCardPage.getCustomerInfoFromAppointmentInfo(device), "FELBERMATR TRANSPORT- UND",
				"Customer Name From Appointment Screen i.e. " + jobCardPage.getCustomerInfoFromAppointmentInfo(device)
						+ " is same as Expected");

		aMob.AssertEquals(jobCardPage.getModelInfoFromAppointmentInfo(device), "35S16V",
				"Model Name From Appointment Screen i.e. " + jobCardPage.getModelInfoFromAppointmentInfo(device)
						+ " is same as Expected");

		aMob.AssertEquals(jobCardPage.getReceptionDateFromAppointmentInfo(device),
				genericPage.getCurrentDate("MMM dd, yyyy"),
				"Reception Date from Appointment Screen i.e. " + jobCardPage.getReceptionDateFromAppointmentInfo(device)
						+ " is same as Expected i.e. " + genericPage.getCurrentDate("MMM dd, yyyy"));

		aMob.AssertEquals(jobCardPage.getDeliveryDateFromAppointmentInfo(device),
				genericPage.getCurrentDate("MMM dd, yyyy"),
				"Delivery Date From Appointment Screen i.e. " + jobCardPage.getDeliveryDateFromAppointmentInfo(device)
						+ " is same as Expected i.e. " + genericPage.getCurrentDate("MMM dd, yyyy"));

		aMob.AssertTrue(jobCardPage.isContactDetailLabelVisible(), "Contact Detail Label is Visible");

		aMob.AssertEquals(jobCardPage.getCustomerEmailValueFromJobDetail(), "valid@jobcard.com",
				"Customer Email From Job Detail Screen i.e. " + jobCardPage.getCustomerEmailValueFromJobDetail()
						+ " is same as Expected");

		aMob.AssertEquals(jobCardPage.getCustomerPhoneNoValueFromJobDetail(), "123456789",
				"Customer Phone No From Job Detail Screen i.e. " + jobCardPage.getCustomerPhoneNoValueFromJobDetail()
						+ " is same as Expected");

		aMob.AssertEquals(jobCardPage.getContactPhoneNumberNoFromJobDetail(), "123456789",
				"Contact Phone No From Job Detail Screen i.e. " + jobCardPage.getContactPhoneNumberNoFromJobDetail()
						+ " is same as Expected");

		aMob.AssertTrue(jobCardPage.isRepairAddressLabelVisible(), "Repair Address Label is Visible");

		aMob.AssertEquals(jobCardPage.getRepairAddressFromJobDetail(),
				"HEBETECHNIK GMBH & CO KG AUPOINT 45101 BERGHEIM", "Repair Address From Job Detail Screen i.e. "
						+ jobCardPage.getRepairAddressFromJobDetail() + " is same as Expected");

		aMob.AssertTrue(jobCardPage.isCustomerComplainsLabelVisible(), "Customer Complain Label is Visible");

		aMob.AssertEquals(jobCardPage.getCustomerComplainEmailFromJobDetail(), "Issue on",
				"Customer Complain From Job Detail Screen i.e. " + jobCardPage.getCustomerComplainEmailFromJobDetail()
						+ " is same as Expected");
	}

	@AfterMethod(alwaysRun = true)
	public void afterMethod() {
		System.out.println("Test");
		driver.quit();
	}

}
